/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl1.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl1.ide.contentassist.antlr.internal.InternalLightweightParser;
import org.xtext.example.mydsl1.services.LightweightGrammarAccess;

public class LightweightParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(LightweightGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, LightweightGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getAuthMethodAccess().getAlternatives(), "rule__AuthMethod__Alternatives");
			builder.put(grammarAccess.getAuthenticatorAccess().getAlternatives(), "rule__Authenticator__Alternatives");
			builder.put(grammarAccess.getPhaseAccess().getAlternatives(), "rule__Phase__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getLEVELAccess().getAlternatives(), "rule__LEVEL__Alternatives");
			builder.put(grammarAccess.getPROVIDERAccess().getAlternatives(), "rule__PROVIDER__Alternatives");
			builder.put(grammarAccess.getCredTYPEAccess().getAlternatives(), "rule__CredTYPE__Alternatives");
			builder.put(grammarAccess.getProtocolAccess().getAlternatives(), "rule__Protocol__Alternatives");
			builder.put(grammarAccess.getBool2Access().getAlternatives(), "rule__Bool2__Alternatives");
			builder.put(grammarAccess.getKVALUEAccess().getAlternatives(), "rule__KVALUE__Alternatives");
			builder.put(grammarAccess.getBVALUEAccess().getAlternatives(), "rule__BVALUE__Alternatives");
			builder.put(grammarAccess.getPVALUEAccess().getAlternatives(), "rule__PVALUE__Alternatives");
			builder.put(grammarAccess.getValidationTypeAccess().getAlternatives(), "rule__ValidationType__Alternatives");
			builder.put(grammarAccess.getAppAccess().getGroup(), "rule__App__Group__0");
			builder.put(grammarAccess.getAppAccess().getGroup_7(), "rule__App__Group_7__0");
			builder.put(grammarAccess.getAppAccess().getGroup_14(), "rule__App__Group_14__0");
			builder.put(grammarAccess.getAppAccess().getGroup_21(), "rule__App__Group_21__0");
			builder.put(grammarAccess.getMFAAccess().getGroup(), "rule__MFA__Group__0");
			builder.put(grammarAccess.getSFAAccess().getGroup(), "rule__SFA__Group__0");
			builder.put(grammarAccess.getPossessionAccess().getGroup(), "rule__Possession__Group__0");
			builder.put(grammarAccess.getKnowledgeAccess().getGroup(), "rule__Knowledge__Group__0");
			builder.put(grammarAccess.getBiometricsAccess().getGroup(), "rule__Biometrics__Group__0");
			builder.put(grammarAccess.getRegistrationAccess().getGroup(), "rule__Registration__Group__0");
			builder.put(grammarAccess.getRegistrationAccess().getGroup_12(), "rule__Registration__Group_12__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup_14(), "rule__Attribute__Group_14__0");
			builder.put(grammarAccess.getVerifMethodAccess().getGroup(), "rule__VerifMethod__Group__0");
			builder.put(grammarAccess.getRecoveryAccess().getGroup(), "rule__Recovery__Group__0");
			builder.put(grammarAccess.getRecoveryAccess().getGroup_12(), "rule__Recovery__Group_12__0");
			builder.put(grammarAccess.getRecoveryAccess().getGroup_12_3(), "rule__Recovery__Group_12_3__0");
			builder.put(grammarAccess.getRecoveryAccess().getGroup_13(), "rule__Recovery__Group_13__0");
			builder.put(grammarAccess.getLoginAccess().getGroup(), "rule__Login__Group__0");
			builder.put(grammarAccess.getLoginAccess().getGroup_15(), "rule__Login__Group_15__0");
			builder.put(grammarAccess.getResetAccess().getGroup(), "rule__Reset__Group__0");
			builder.put(grammarAccess.getResetAccess().getGroup_12(), "rule__Reset__Group_12__0");
			builder.put(grammarAccess.getResetAccess().getGroup_12_3(), "rule__Reset__Group_12_3__0");
			builder.put(grammarAccess.getAppAccess().getAuthenticatorsAssignment_6(), "rule__App__AuthenticatorsAssignment_6");
			builder.put(grammarAccess.getAppAccess().getAuthenticatorsAssignment_7_1(), "rule__App__AuthenticatorsAssignment_7_1");
			builder.put(grammarAccess.getAppAccess().getAuthMethodsAssignment_13(), "rule__App__AuthMethodsAssignment_13");
			builder.put(grammarAccess.getAppAccess().getAuthMethodsAssignment_14_1(), "rule__App__AuthMethodsAssignment_14_1");
			builder.put(grammarAccess.getAppAccess().getPhasesAssignment_20(), "rule__App__PhasesAssignment_20");
			builder.put(grammarAccess.getAppAccess().getPhasesAssignment_21_1(), "rule__App__PhasesAssignment_21_1");
			builder.put(grammarAccess.getMFAAccess().getTypeAssignment_0(), "rule__MFA__TypeAssignment_0");
			builder.put(grammarAccess.getMFAAccess().getNameAssignment_5(), "rule__MFA__NameAssignment_5");
			builder.put(grammarAccess.getMFAAccess().getAuthenticatorsAssignment_9(), "rule__MFA__AuthenticatorsAssignment_9");
			builder.put(grammarAccess.getMFAAccess().getAuthenticatorsAssignment_11(), "rule__MFA__AuthenticatorsAssignment_11");
			builder.put(grammarAccess.getMFAAccess().getCorrelationAssignment_15(), "rule__MFA__CorrelationAssignment_15");
			builder.put(grammarAccess.getMFAAccess().getValidationAssignment_19(), "rule__MFA__ValidationAssignment_19");
			builder.put(grammarAccess.getSFAAccess().getTypeAssignment_0(), "rule__SFA__TypeAssignment_0");
			builder.put(grammarAccess.getSFAAccess().getNameAssignment_5(), "rule__SFA__NameAssignment_5");
			builder.put(grammarAccess.getSFAAccess().getAuthenticatorsAssignment_9(), "rule__SFA__AuthenticatorsAssignment_9");
			builder.put(grammarAccess.getPossessionAccess().getTypeAssignment_1(), "rule__Possession__TypeAssignment_1");
			builder.put(grammarAccess.getPossessionAccess().getNameAssignment_6(), "rule__Possession__NameAssignment_6");
			builder.put(grammarAccess.getPossessionAccess().getValueAssignment_10(), "rule__Possession__ValueAssignment_10");
			builder.put(grammarAccess.getKnowledgeAccess().getTypeAssignment_1(), "rule__Knowledge__TypeAssignment_1");
			builder.put(grammarAccess.getKnowledgeAccess().getNameAssignment_6(), "rule__Knowledge__NameAssignment_6");
			builder.put(grammarAccess.getKnowledgeAccess().getValueAssignment_10(), "rule__Knowledge__ValueAssignment_10");
			builder.put(grammarAccess.getKnowledgeAccess().getLimitedAttemptsAssignment_14(), "rule__Knowledge__LimitedAttemptsAssignment_14");
			builder.put(grammarAccess.getKnowledgeAccess().getAutofilledAssignment_18(), "rule__Knowledge__AutofilledAssignment_18");
			builder.put(grammarAccess.getBiometricsAccess().getTypeAssignment_1(), "rule__Biometrics__TypeAssignment_1");
			builder.put(grammarAccess.getBiometricsAccess().getNameAssignment_6(), "rule__Biometrics__NameAssignment_6");
			builder.put(grammarAccess.getBiometricsAccess().getValueAssignment_10(), "rule__Biometrics__ValueAssignment_10");
			builder.put(grammarAccess.getRegistrationAccess().getTypeAssignment_1(), "rule__Registration__TypeAssignment_1");
			builder.put(grammarAccess.getRegistrationAccess().getNameAssignment_6(), "rule__Registration__NameAssignment_6");
			builder.put(grammarAccess.getRegistrationAccess().getAttributesAssignment_11(), "rule__Registration__AttributesAssignment_11");
			builder.put(grammarAccess.getRegistrationAccess().getAttributesAssignment_12_1(), "rule__Registration__AttributesAssignment_12_1");
			builder.put(grammarAccess.getAttributeAccess().getNameAssignment_4(), "rule__Attribute__NameAssignment_4");
			builder.put(grammarAccess.getAttributeAccess().getProviderAssignment_8(), "rule__Attribute__ProviderAssignment_8");
			builder.put(grammarAccess.getAttributeAccess().getTypeAssignment_12(), "rule__Attribute__TypeAssignment_12");
			builder.put(grammarAccess.getAttributeAccess().getVerifmethodAssignment_14_2(), "rule__Attribute__VerifmethodAssignment_14_2");
			builder.put(grammarAccess.getVerifMethodAccess().getValidityAssignment_4(), "rule__VerifMethod__ValidityAssignment_4");
			builder.put(grammarAccess.getVerifMethodAccess().getUniquenessAssignment_8(), "rule__VerifMethod__UniquenessAssignment_8");
			builder.put(grammarAccess.getVerifMethodAccess().getBindingsAssignment_12(), "rule__VerifMethod__BindingsAssignment_12");
			builder.put(grammarAccess.getRecoveryAccess().getTypeAssignment_1(), "rule__Recovery__TypeAssignment_1");
			builder.put(grammarAccess.getRecoveryAccess().getNameAssignment_6(), "rule__Recovery__NameAssignment_6");
			builder.put(grammarAccess.getRecoveryAccess().getAuthenticatorAssignment_10(), "rule__Recovery__AuthenticatorAssignment_10");
			builder.put(grammarAccess.getRecoveryAccess().getAuthMethodsAssignment_12_2(), "rule__Recovery__AuthMethodsAssignment_12_2");
			builder.put(grammarAccess.getRecoveryAccess().getAuthMethodsAssignment_12_3_1(), "rule__Recovery__AuthMethodsAssignment_12_3_1");
			builder.put(grammarAccess.getRecoveryAccess().getProtocolAssignment_13_2(), "rule__Recovery__ProtocolAssignment_13_2");
			builder.put(grammarAccess.getLoginAccess().getTypeAssignment_1(), "rule__Login__TypeAssignment_1");
			builder.put(grammarAccess.getLoginAccess().getNameAssignment_6(), "rule__Login__NameAssignment_6");
			builder.put(grammarAccess.getLoginAccess().getSessionAssignment_10(), "rule__Login__SessionAssignment_10");
			builder.put(grammarAccess.getLoginAccess().getAuthMethodsAssignment_14(), "rule__Login__AuthMethodsAssignment_14");
			builder.put(grammarAccess.getLoginAccess().getAuthMethodsAssignment_15_1(), "rule__Login__AuthMethodsAssignment_15_1");
			builder.put(grammarAccess.getResetAccess().getTypeAssignment_1(), "rule__Reset__TypeAssignment_1");
			builder.put(grammarAccess.getResetAccess().getNameAssignment_6(), "rule__Reset__NameAssignment_6");
			builder.put(grammarAccess.getResetAccess().getAuthenticatorAssignment_10(), "rule__Reset__AuthenticatorAssignment_10");
			builder.put(grammarAccess.getResetAccess().getAuthMethodsAssignment_12_2(), "rule__Reset__AuthMethodsAssignment_12_2");
			builder.put(grammarAccess.getResetAccess().getAuthMethodsAssignment_12_3_1(), "rule__Reset__AuthMethodsAssignment_12_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private LightweightGrammarAccess grammarAccess;

	@Override
	protected InternalLightweightParser createParser() {
		InternalLightweightParser result = new InternalLightweightParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public LightweightGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(LightweightGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
