/*
 * generated by Xtext 2.15.0
 */
grammar InternalLightweight;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl1.services.LightweightGrammarAccess;

}

@parser::members {

 	private LightweightGrammarAccess grammarAccess;

    public InternalLightweightParser(TokenStream input, LightweightGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "App";
   	}

   	@Override
   	protected LightweightGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleApp
entryRuleApp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppRule()); }
	iv_ruleApp=ruleApp
	{ $current=$iv_ruleApp.current; }
	EOF;

// Rule App
ruleApp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='App'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppAccess().getAppKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAppAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAppAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='Authenticators'
		{
			newLeafNode(otherlv_3, grammarAccess.getAppAccess().getAuthenticatorsKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getAppAccess().getColonKeyword_4());
		}
		otherlv_5='['
		{
			newLeafNode(otherlv_5, grammarAccess.getAppAccess().getLeftSquareBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getAuthenticatorsAuthenticatorParserRuleCall_6_0());
				}
				lv_authenticators_6_0=ruleAuthenticator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					add(
						$current,
						"authenticators",
						lv_authenticators_6_0,
						"org.xtext.example.mydsl1.Lightweight.Authenticator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getAppAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAppAccess().getAuthenticatorsAuthenticatorParserRuleCall_7_1_0());
					}
					lv_authenticators_8_0=ruleAuthenticator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAppRule());
						}
						add(
							$current,
							"authenticators",
							lv_authenticators_8_0,
							"org.xtext.example.mydsl1.Lightweight.Authenticator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9=']'
		{
			newLeafNode(otherlv_9, grammarAccess.getAppAccess().getRightSquareBracketKeyword_8());
		}
		otherlv_10=','
		{
			newLeafNode(otherlv_10, grammarAccess.getAppAccess().getCommaKeyword_9());
		}
		otherlv_11='Authentications'
		{
			newLeafNode(otherlv_11, grammarAccess.getAppAccess().getAuthenticationsKeyword_10());
		}
		otherlv_12=':'
		{
			newLeafNode(otherlv_12, grammarAccess.getAppAccess().getColonKeyword_11());
		}
		otherlv_13='['
		{
			newLeafNode(otherlv_13, grammarAccess.getAppAccess().getLeftSquareBracketKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getAuthMethodsAuthMethodParserRuleCall_13_0());
				}
				lv_authMethods_14_0=ruleAuthMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					add(
						$current,
						"authMethods",
						lv_authMethods_14_0,
						"org.xtext.example.mydsl1.Lightweight.AuthMethod");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getAppAccess().getCommaKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAppAccess().getAuthMethodsAuthMethodParserRuleCall_14_1_0());
					}
					lv_authMethods_16_0=ruleAuthMethod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAppRule());
						}
						add(
							$current,
							"authMethods",
							lv_authMethods_16_0,
							"org.xtext.example.mydsl1.Lightweight.AuthMethod");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17=']'
		{
			newLeafNode(otherlv_17, grammarAccess.getAppAccess().getRightSquareBracketKeyword_15());
		}
		otherlv_18=','
		{
			newLeafNode(otherlv_18, grammarAccess.getAppAccess().getCommaKeyword_16());
		}
		otherlv_19='Procedures'
		{
			newLeafNode(otherlv_19, grammarAccess.getAppAccess().getProceduresKeyword_17());
		}
		otherlv_20=':'
		{
			newLeafNode(otherlv_20, grammarAccess.getAppAccess().getColonKeyword_18());
		}
		otherlv_21='['
		{
			newLeafNode(otherlv_21, grammarAccess.getAppAccess().getLeftSquareBracketKeyword_19());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getPhasesPhaseParserRuleCall_20_0());
				}
				lv_phases_22_0=rulePhase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					add(
						$current,
						"phases",
						lv_phases_22_0,
						"org.xtext.example.mydsl1.Lightweight.Phase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_23=','
			{
				newLeafNode(otherlv_23, grammarAccess.getAppAccess().getCommaKeyword_21_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAppAccess().getPhasesPhaseParserRuleCall_21_1_0());
					}
					lv_phases_24_0=rulePhase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAppRule());
						}
						add(
							$current,
							"phases",
							lv_phases_24_0,
							"org.xtext.example.mydsl1.Lightweight.Phase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_25=']'
		{
			newLeafNode(otherlv_25, grammarAccess.getAppAccess().getRightSquareBracketKeyword_22());
		}
		otherlv_26='}'
		{
			newLeafNode(otherlv_26, grammarAccess.getAppAccess().getRightCurlyBracketKeyword_23());
		}
	)
;

// Entry rule entryRuleAuthMethod
entryRuleAuthMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAuthMethodRule()); }
	iv_ruleAuthMethod=ruleAuthMethod
	{ $current=$iv_ruleAuthMethod.current; }
	EOF;

// Rule AuthMethod
ruleAuthMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAuthMethodAccess().getMFAParserRuleCall_0());
		}
		this_MFA_0=ruleMFA
		{
			$current = $this_MFA_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAuthMethodAccess().getSFAParserRuleCall_1());
		}
		this_SFA_1=ruleSFA
		{
			$current = $this_SFA_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMFA
entryRuleMFA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMFARule()); }
	iv_ruleMFA=ruleMFA
	{ $current=$iv_ruleMFA.current; }
	EOF;

// Rule MFA
ruleMFA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='2FA'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getMFAAccess().getType2FAKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMFARule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "2FA");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMFAAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMFAAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getMFAAccess().getNameKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getMFAAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMFAAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMFARule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getMFAAccess().getCommaKeyword_6());
		}
		otherlv_7='authenticators'
		{
			newLeafNode(otherlv_7, grammarAccess.getMFAAccess().getAuthenticatorsKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getMFAAccess().getColonKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMFARule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getMFAAccess().getAuthenticatorsAuthenticatorCrossReference_9_0());
				}
			)
		)
		otherlv_10='&'
		{
			newLeafNode(otherlv_10, grammarAccess.getMFAAccess().getAmpersandKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMFARule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getMFAAccess().getAuthenticatorsAuthenticatorCrossReference_11_0());
				}
			)
		)+
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getMFAAccess().getCommaKeyword_12());
			}
		)?
		otherlv_13='correlation'
		{
			newLeafNode(otherlv_13, grammarAccess.getMFAAccess().getCorrelationKeyword_13());
		}
		otherlv_14=':'
		{
			newLeafNode(otherlv_14, grammarAccess.getMFAAccess().getColonKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMFAAccess().getCorrelationEBooleanParserRuleCall_15_0());
				}
				lv_correlation_15_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMFARule());
					}
					set(
						$current,
						"correlation",
						true,
						"org.xtext.example.mydsl1.Lightweight.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_16=','
		{
			newLeafNode(otherlv_16, grammarAccess.getMFAAccess().getCommaKeyword_16());
		}
		otherlv_17='validation'
		{
			newLeafNode(otherlv_17, grammarAccess.getMFAAccess().getValidationKeyword_17());
		}
		otherlv_18=':'
		{
			newLeafNode(otherlv_18, grammarAccess.getMFAAccess().getColonKeyword_18());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMFAAccess().getValidationValidationTypeEnumRuleCall_19_0());
				}
				lv_validation_19_0=ruleValidationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMFARule());
					}
					set(
						$current,
						"validation",
						lv_validation_19_0,
						"org.xtext.example.mydsl1.Lightweight.ValidationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getMFAAccess().getRightCurlyBracketKeyword_20());
		}
	)
;

// Entry rule entryRuleSFA
entryRuleSFA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSFARule()); }
	iv_ruleSFA=ruleSFA
	{ $current=$iv_ruleSFA.current; }
	EOF;

// Rule SFA
ruleSFA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='SFA'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getSFAAccess().getTypeSFAKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSFARule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "SFA");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSFAAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSFAAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getSFAAccess().getNameKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getSFAAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSFAAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSFARule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getSFAAccess().getCommaKeyword_6());
		}
		otherlv_7='authenticator'
		{
			newLeafNode(otherlv_7, grammarAccess.getSFAAccess().getAuthenticatorKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getSFAAccess().getColonKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSFARule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getSFAAccess().getAuthenticatorsAuthenticatorCrossReference_9_0());
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSFAAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleAuthenticator
entryRuleAuthenticator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAuthenticatorRule()); }
	iv_ruleAuthenticator=ruleAuthenticator
	{ $current=$iv_ruleAuthenticator.current; }
	EOF;

// Rule Authenticator
ruleAuthenticator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAuthenticatorAccess().getPossessionParserRuleCall_0());
		}
		this_Possession_0=rulePossession
		{
			$current = $this_Possession_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAuthenticatorAccess().getBiometricsParserRuleCall_1());
		}
		this_Biometrics_1=ruleBiometrics
		{
			$current = $this_Biometrics_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAuthenticatorAccess().getKnowledgeParserRuleCall_2());
		}
		this_Knowledge_2=ruleKnowledge
		{
			$current = $this_Knowledge_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePossession
entryRulePossession returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPossessionRule()); }
	iv_rulePossession=rulePossession
	{ $current=$iv_rulePossession.current; }
	EOF;

// Rule Possession
rulePossession returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='Possession'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getPossessionAccess().getTypePossessionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPossessionRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "Possession");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPossessionAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPossessionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getPossessionAccess().getNameKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getPossessionAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPossessionAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPossessionRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getPossessionAccess().getCommaKeyword_6());
		}
		otherlv_7='value'
		{
			newLeafNode(otherlv_7, grammarAccess.getPossessionAccess().getValueKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getPossessionAccess().getColonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPossessionAccess().getValuePVALUEEnumRuleCall_9_0());
				}
				lv_value_9_0=rulePVALUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPossessionRule());
					}
					set(
						$current,
						"value",
						lv_value_9_0,
						"org.xtext.example.mydsl1.Lightweight.PVALUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPossessionAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleKnowledge
entryRuleKnowledge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKnowledgeRule()); }
	iv_ruleKnowledge=ruleKnowledge
	{ $current=$iv_ruleKnowledge.current; }
	EOF;

// Rule Knowledge
ruleKnowledge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='Knowledge'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getKnowledgeAccess().getTypeKnowledgeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKnowledgeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "Knowledge");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getKnowledgeAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getKnowledgeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getKnowledgeAccess().getNameKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getKnowledgeAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKnowledgeAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKnowledgeRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getKnowledgeAccess().getCommaKeyword_6());
		}
		otherlv_7='value'
		{
			newLeafNode(otherlv_7, grammarAccess.getKnowledgeAccess().getValueKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getKnowledgeAccess().getColonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKnowledgeAccess().getValueKVALUEEnumRuleCall_9_0());
				}
				lv_value_9_0=ruleKVALUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKnowledgeRule());
					}
					set(
						$current,
						"value",
						lv_value_9_0,
						"org.xtext.example.mydsl1.Lightweight.KVALUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=','
		{
			newLeafNode(otherlv_10, grammarAccess.getKnowledgeAccess().getCommaKeyword_10());
		}
		otherlv_11='limitedAttempts'
		{
			newLeafNode(otherlv_11, grammarAccess.getKnowledgeAccess().getLimitedAttemptsKeyword_11());
		}
		otherlv_12=':'
		{
			newLeafNode(otherlv_12, grammarAccess.getKnowledgeAccess().getColonKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKnowledgeAccess().getLimitedAttemptsEBooleanParserRuleCall_13_0());
				}
				lv_limitedAttempts_13_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKnowledgeRule());
					}
					set(
						$current,
						"limitedAttempts",
						true,
						"org.xtext.example.mydsl1.Lightweight.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14=','
		{
			newLeafNode(otherlv_14, grammarAccess.getKnowledgeAccess().getCommaKeyword_14());
		}
		otherlv_15='autofillable'
		{
			newLeafNode(otherlv_15, grammarAccess.getKnowledgeAccess().getAutofillableKeyword_15());
		}
		otherlv_16=':'
		{
			newLeafNode(otherlv_16, grammarAccess.getKnowledgeAccess().getColonKeyword_16());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKnowledgeAccess().getAutofilledEBooleanParserRuleCall_17_0());
				}
				lv_autofilled_17_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKnowledgeRule());
					}
					set(
						$current,
						"autofilled",
						true,
						"org.xtext.example.mydsl1.Lightweight.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getKnowledgeAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleBiometrics
entryRuleBiometrics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBiometricsRule()); }
	iv_ruleBiometrics=ruleBiometrics
	{ $current=$iv_ruleBiometrics.current; }
	EOF;

// Rule Biometrics
ruleBiometrics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='Biometrics'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getBiometricsAccess().getTypeBiometricsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBiometricsRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "Biometrics");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBiometricsAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBiometricsAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getBiometricsAccess().getNameKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getBiometricsAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBiometricsAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBiometricsRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getBiometricsAccess().getCommaKeyword_6());
		}
		otherlv_7='value'
		{
			newLeafNode(otherlv_7, grammarAccess.getBiometricsAccess().getValueKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getBiometricsAccess().getColonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBiometricsAccess().getValueBVALUEEnumRuleCall_9_0());
				}
				lv_value_9_0=ruleBVALUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBiometricsRule());
					}
					set(
						$current,
						"value",
						lv_value_9_0,
						"org.xtext.example.mydsl1.Lightweight.BVALUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getBiometricsAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRulePhase
entryRulePhase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhaseRule()); }
	iv_rulePhase=rulePhase
	{ $current=$iv_rulePhase.current; }
	EOF;

// Rule Phase
rulePhase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPhaseAccess().getRegistrationParserRuleCall_0());
		}
		this_Registration_0=ruleRegistration
		{
			$current = $this_Registration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPhaseAccess().getRecoveryParserRuleCall_1());
		}
		this_Recovery_1=ruleRecovery
		{
			$current = $this_Recovery_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPhaseAccess().getLoginParserRuleCall_2());
		}
		this_Login_2=ruleLogin
		{
			$current = $this_Login_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPhaseAccess().getResetParserRuleCall_3());
		}
		this_Reset_3=ruleReset
		{
			$current = $this_Reset_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleRegistration
entryRuleRegistration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegistrationRule()); }
	iv_ruleRegistration=ruleRegistration
	{ $current=$iv_ruleRegistration.current; }
	EOF;

// Rule Registration
ruleRegistration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='Registration'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getRegistrationAccess().getTypeRegistrationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistrationRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "Registration");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRegistrationAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRegistrationAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getRegistrationAccess().getNameKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getRegistrationAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegistrationAccess().getNameEStringParserRuleCall_5_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegistrationRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getRegistrationAccess().getCommaKeyword_6());
		}
		otherlv_7='credentials'
		{
			newLeafNode(otherlv_7, grammarAccess.getRegistrationAccess().getCredentialsKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getRegistrationAccess().getColonKeyword_8());
		}
		otherlv_9='['
		{
			newLeafNode(otherlv_9, grammarAccess.getRegistrationAccess().getLeftSquareBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegistrationAccess().getCredentialsCredentialParserRuleCall_10_0());
				}
				lv_credentials_10_0=ruleCredential
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegistrationRule());
					}
					add(
						$current,
						"credentials",
						lv_credentials_10_0,
						"org.xtext.example.mydsl1.Lightweight.Credential");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getRegistrationAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegistrationAccess().getCredentialsCredentialParserRuleCall_11_1_0());
					}
					lv_credentials_12_0=ruleCredential
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegistrationRule());
						}
						add(
							$current,
							"credentials",
							lv_credentials_12_0,
							"org.xtext.example.mydsl1.Lightweight.Credential");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13=']'
		{
			newLeafNode(otherlv_13, grammarAccess.getRegistrationAccess().getRightSquareBracketKeyword_12());
		}
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getRegistrationAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleCredential
entryRuleCredential returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCredentialRule()); }
	iv_ruleCredential=ruleCredential
	{ $current=$iv_ruleCredential.current; }
	EOF;

// Rule Credential
ruleCredential returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCredentialAccess().getCredentialAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCredentialAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getCredentialAccess().getNameKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getCredentialAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCredentialAccess().getNameEStringParserRuleCall_4_0());
				}
				lv_name_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCredentialRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getCredentialAccess().getCommaKeyword_5());
		}
		otherlv_6='provider'
		{
			newLeafNode(otherlv_6, grammarAccess.getCredentialAccess().getProviderKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getCredentialAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCredentialAccess().getProviderPROVIDEREnumRuleCall_8_0());
				}
				lv_provider_8_0=rulePROVIDER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCredentialRule());
					}
					set(
						$current,
						"provider",
						lv_provider_8_0,
						"org.xtext.example.mydsl1.Lightweight.PROVIDER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getCredentialAccess().getCommaKeyword_9());
		}
		otherlv_10='type'
		{
			newLeafNode(otherlv_10, grammarAccess.getCredentialAccess().getTypeKeyword_10());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getCredentialAccess().getColonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCredentialAccess().getTypeCredTYPEEnumRuleCall_12_0());
				}
				lv_type_12_0=ruleCredTYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCredentialRule());
					}
					set(
						$current,
						"type",
						lv_type_12_0,
						"org.xtext.example.mydsl1.Lightweight.CredTYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getCredentialAccess().getCommaKeyword_13());
		}
		(
			otherlv_14='verification'
			{
				newLeafNode(otherlv_14, grammarAccess.getCredentialAccess().getVerificationKeyword_14_0());
			}
			otherlv_15=':'
			{
				newLeafNode(otherlv_15, grammarAccess.getCredentialAccess().getColonKeyword_14_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCredentialAccess().getVerifmethodVerifMethodParserRuleCall_14_2_0());
					}
					lv_verifmethod_16_0=ruleVerifMethod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCredentialRule());
						}
						set(
							$current,
							"verifmethod",
							lv_verifmethod_16_0,
							"org.xtext.example.mydsl1.Lightweight.VerifMethod");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getCredentialAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleVerifMethod
entryRuleVerifMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifMethodRule()); }
	iv_ruleVerifMethod=ruleVerifMethod
	{ $current=$iv_ruleVerifMethod.current; }
	EOF;

// Rule VerifMethod
ruleVerifMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVerifMethodAccess().getVerifMethodAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVerifMethodAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='validity'
		{
			newLeafNode(otherlv_2, grammarAccess.getVerifMethodAccess().getValidityKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getVerifMethodAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifMethodAccess().getValidityEBooleanParserRuleCall_4_0());
				}
				lv_validity_4_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifMethodRule());
					}
					set(
						$current,
						"validity",
						lv_validity_4_0,
						"org.xtext.example.mydsl1.Lightweight.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getVerifMethodAccess().getCommaKeyword_5());
		}
		otherlv_6='uniqueness'
		{
			newLeafNode(otherlv_6, grammarAccess.getVerifMethodAccess().getUniquenessKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getVerifMethodAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifMethodAccess().getUniquenessEBooleanParserRuleCall_8_0());
				}
				lv_uniqueness_8_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifMethodRule());
					}
					set(
						$current,
						"uniqueness",
						lv_uniqueness_8_0,
						"org.xtext.example.mydsl1.Lightweight.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getVerifMethodAccess().getCommaKeyword_9());
		}
		otherlv_10='bindings'
		{
			newLeafNode(otherlv_10, grammarAccess.getVerifMethodAccess().getBindingsKeyword_10());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getVerifMethodAccess().getColonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifMethodAccess().getBindingsEBooleanParserRuleCall_12_0());
				}
				lv_bindings_12_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifMethodRule());
					}
					set(
						$current,
						"bindings",
						lv_bindings_12_0,
						"org.xtext.example.mydsl1.Lightweight.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getVerifMethodAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleRecovery
entryRuleRecovery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecoveryRule()); }
	iv_ruleRecovery=ruleRecovery
	{ $current=$iv_ruleRecovery.current; }
	EOF;

// Rule Recovery
ruleRecovery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRecoveryAccess().getRecoveryAction_0(),
					$current);
			}
		)
		(
			(
				lv_type_1_0='Recovery'
				{
					newLeafNode(lv_type_1_0, grammarAccess.getRecoveryAccess().getTypeRecoveryKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecoveryRule());
					}
					setWithLastConsumed($current, "type", lv_type_1_0, "Recovery");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRecoveryAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRecoveryAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='name'
		{
			newLeafNode(otherlv_4, grammarAccess.getRecoveryAccess().getNameKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getRecoveryAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecoveryAccess().getNameEStringParserRuleCall_6_0());
				}
				lv_name_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecoveryRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getRecoveryAccess().getCommaKeyword_7());
		}
		(
			otherlv_8='authenticator'
			{
				newLeafNode(otherlv_8, grammarAccess.getRecoveryAccess().getAuthenticatorKeyword_8_0());
			}
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getRecoveryAccess().getColonKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRecoveryRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getRecoveryAccess().getAuthenticatorAuthenticatorCrossReference_8_2_0());
					}
				)
			)
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getRecoveryAccess().getCommaKeyword_8_3());
			}
		)?
		(
			otherlv_12='protocol'
			{
				newLeafNode(otherlv_12, grammarAccess.getRecoveryAccess().getProtocolKeyword_9_0());
			}
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getRecoveryAccess().getColonKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRecoveryAccess().getProtocolProtocolEnumRuleCall_9_2_0());
					}
					lv_protocol_14_0=ruleProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRecoveryRule());
						}
						set(
							$current,
							"protocol",
							lv_protocol_14_0,
							"org.xtext.example.mydsl1.Lightweight.Protocol");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getRecoveryAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleLogin
entryRuleLogin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoginRule()); }
	iv_ruleLogin=ruleLogin
	{ $current=$iv_ruleLogin.current; }
	EOF;

// Rule Login
ruleLogin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoginAccess().getLoginAction_0(),
					$current);
			}
		)
		(
			(
				lv_type_1_0='Login'
				{
					newLeafNode(lv_type_1_0, grammarAccess.getLoginAccess().getTypeLoginKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoginRule());
					}
					setWithLastConsumed($current, "type", lv_type_1_0, "Login");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoginAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoginAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='name'
		{
			newLeafNode(otherlv_4, grammarAccess.getLoginAccess().getNameKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getLoginAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoginAccess().getNameEStringParserRuleCall_6_0());
				}
				lv_name_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoginRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getLoginAccess().getCommaKeyword_7());
		}
		otherlv_8='persistedSession'
		{
			newLeafNode(otherlv_8, grammarAccess.getLoginAccess().getPersistedSessionKeyword_8());
		}
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getLoginAccess().getColonKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoginAccess().getSessionEBooleanParserRuleCall_10_0());
				}
				lv_session_10_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoginRule());
					}
					set(
						$current,
						"session",
						lv_session_10_0,
						"org.xtext.example.mydsl1.Lightweight.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getLoginAccess().getCommaKeyword_11());
		}
		otherlv_12='authentication'
		{
			newLeafNode(otherlv_12, grammarAccess.getLoginAccess().getAuthenticationKeyword_12());
		}
		otherlv_13=':'
		{
			newLeafNode(otherlv_13, grammarAccess.getLoginAccess().getColonKeyword_13());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoginRule());
					}
				}
				otherlv_14=RULE_ID
				{
					newLeafNode(otherlv_14, grammarAccess.getLoginAccess().getAuthMethodsAuthMethodCrossReference_14_0());
				}
			)
		)
		(
			otherlv_15='||'
			{
				newLeafNode(otherlv_15, grammarAccess.getLoginAccess().getVerticalLineVerticalLineKeyword_15_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoginRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getLoginAccess().getAuthMethodsAuthMethodCrossReference_15_1_0());
					}
				)
			)
		)*
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getLoginAccess().getRightCurlyBracketKeyword_16());
		}
	)
;

// Entry rule entryRuleReset
entryRuleReset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResetRule()); }
	iv_ruleReset=ruleReset
	{ $current=$iv_ruleReset.current; }
	EOF;

// Rule Reset
ruleReset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getResetAccess().getResetAction_0(),
					$current);
			}
		)
		(
			(
				lv_type_1_0='Reset'
				{
					newLeafNode(lv_type_1_0, grammarAccess.getResetAccess().getTypeResetKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResetRule());
					}
					setWithLastConsumed($current, "type", lv_type_1_0, "Reset");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getResetAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getResetAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='name'
		{
			newLeafNode(otherlv_4, grammarAccess.getResetAccess().getNameKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getResetAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResetAccess().getNameEStringParserRuleCall_6_0());
				}
				lv_name_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResetRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"org.xtext.example.mydsl1.Lightweight.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getResetAccess().getCommaKeyword_7());
		}
		(
			otherlv_8='authenticator'
			{
				newLeafNode(otherlv_8, grammarAccess.getResetAccess().getAuthenticatorKeyword_8_0());
			}
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getResetAccess().getColonKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResetRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getResetAccess().getAuthenticatorAuthenticatorCrossReference_8_2_0());
					}
				)
			)
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getResetAccess().getCommaKeyword_8_3());
			}
		)?
		otherlv_12='authentication'
		{
			newLeafNode(otherlv_12, grammarAccess.getResetAccess().getAuthenticationKeyword_9());
		}
		otherlv_13=':'
		{
			newLeafNode(otherlv_13, grammarAccess.getResetAccess().getColonKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResetRule());
					}
				}
				otherlv_14=RULE_ID
				{
					newLeafNode(otherlv_14, grammarAccess.getResetAccess().getAuthMethodsAuthMethodCrossReference_11_0());
				}
			)
		)
		(
			otherlv_15='||'
			{
				newLeafNode(otherlv_15, grammarAccess.getResetAccess().getVerticalLineVerticalLineKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResetRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getResetAccess().getAuthMethodsAuthMethodCrossReference_12_1_0());
					}
				)
			)
		)*
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getResetAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Rule PROVIDER
rulePROVIDER returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Identity provider'
			{
				$current = grammarAccess.getPROVIDERAccess().getIdPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPROVIDERAccess().getIdPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Self provided'
			{
				$current = grammarAccess.getPROVIDERAccess().getSELFEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPROVIDERAccess().getSELFEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Institutional'
			{
				$current = grammarAccess.getPROVIDERAccess().getINSTITUTIONALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPROVIDERAccess().getINSTITUTIONALEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule CredTYPE
ruleCredTYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Digital'
			{
				$current = grammarAccess.getCredTYPEAccess().getDIGITALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCredTYPEAccess().getDIGITALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Physical'
			{
				$current = grammarAccess.getCredTYPEAccess().getPHYSICALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCredTYPEAccess().getPHYSICALEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Protocol
ruleProtocol returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Email-Based'
			{
				$current = grammarAccess.getProtocolAccess().getEBIAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getProtocolAccess().getEBIAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MS-based'
			{
				$current = grammarAccess.getProtocolAccess().getSMS_BASEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getProtocolAccess().getSMS_BASEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Local'
			{
				$current = grammarAccess.getProtocolAccess().getLOCALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getProtocolAccess().getLOCALEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule KVALUE
ruleKVALUE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='High Entropy Text-Based Password'
			{
				$current = grammarAccess.getKVALUEAccess().getSTBPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getKVALUEAccess().getSTBPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Pass phrase'
			{
				$current = grammarAccess.getKVALUEAccess().getPASSPHRASEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getKVALUEAccess().getPASSPHRASEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Knowledge-based Preferences'
			{
				$current = grammarAccess.getKVALUEAccess().getPREFERENCESEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getKVALUEAccess().getPREFERENCESEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Low Entropy Text-Based Password'
			{
				$current = grammarAccess.getKVALUEAccess().getLTBPEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getKVALUEAccess().getLTBPEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Pin Code'
			{
				$current = grammarAccess.getKVALUEAccess().getPINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getKVALUEAccess().getPINEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule BVALUE
ruleBVALUE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Fingerprint Recognition'
			{
				$current = grammarAccess.getBVALUEAccess().getFINGERPRINTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBVALUEAccess().getFINGERPRINTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Facial Recognition'
			{
				$current = grammarAccess.getBVALUEAccess().getIRISEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBVALUEAccess().getIRISEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule PVALUE
rulePVALUE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Hard Drive Token'
			{
				$current = grammarAccess.getPVALUEAccess().getTOKENEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPVALUEAccess().getTOKENEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Physical device'
			{
				$current = grammarAccess.getPVALUEAccess().getDEVICEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPVALUEAccess().getDEVICEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ValidationType
ruleValidationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='local validation'
			{
				$current = grammarAccess.getValidationTypeAccess().getLOCALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getValidationTypeAccess().getLOCALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Remote validation'
			{
				$current = grammarAccess.getValidationTypeAccess().getREMOTEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getValidationTypeAccess().getREMOTEEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
