/*
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl1.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class LightweightGrammarAccess extends AbstractGrammarElementFinder {
	
	public class AppElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.App");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAppKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAuthenticatorsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAuthenticatorsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAuthenticatorsAuthenticatorParserRuleCall_6_0 = (RuleCall)cAuthenticatorsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cAuthenticatorsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cAuthenticatorsAuthenticatorParserRuleCall_7_1_0 = (RuleCall)cAuthenticatorsAssignment_7_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cAuthenticationsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftSquareBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cAuthMethodsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAuthMethodsAuthMethodParserRuleCall_13_0 = (RuleCall)cAuthMethodsAssignment_13.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cCommaKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cAuthMethodsAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cAuthMethodsAuthMethodParserRuleCall_14_1_0 = (RuleCall)cAuthMethodsAssignment_14_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cCommaKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cProceduresKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cColonKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cLeftSquareBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cPhasesAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cPhasesPhaseParserRuleCall_20_0 = (RuleCall)cPhasesAssignment_20.eContents().get(0);
		private final Group cGroup_21 = (Group)cGroup.eContents().get(21);
		private final Keyword cCommaKeyword_21_0 = (Keyword)cGroup_21.eContents().get(0);
		private final Assignment cPhasesAssignment_21_1 = (Assignment)cGroup_21.eContents().get(1);
		private final RuleCall cPhasesPhaseParserRuleCall_21_1_0 = (RuleCall)cPhasesAssignment_21_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cRightCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		
		//App:
		//	'App' ":"
		//	'{'
		//	'Authenticators' ":" '[' authenticators+=Authenticator ("," authenticators+=Authenticator)* ']' ","
		//	'Authentications' ":" '[' authMethods+=AuthMethod ("," authMethods+=AuthMethod)* ']' ","
		//	'Procedures' ":" '[' phases+=Phase ("," phases+=Phase)* ']'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'App' ":" '{' 'Authenticators' ":" '[' authenticators+=Authenticator ("," authenticators+=Authenticator)* ']' ","
		//'Authentications' ":" '[' authMethods+=AuthMethod ("," authMethods+=AuthMethod)* ']' "," 'Procedures' ":" '['
		//phases+=Phase ("," phases+=Phase)* ']' '}'
		public Group getGroup() { return cGroup; }
		
		//'App'
		public Keyword getAppKeyword_0() { return cAppKeyword_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'Authenticators'
		public Keyword getAuthenticatorsKeyword_3() { return cAuthenticatorsKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//authenticators+=Authenticator
		public Assignment getAuthenticatorsAssignment_6() { return cAuthenticatorsAssignment_6; }
		
		//Authenticator
		public RuleCall getAuthenticatorsAuthenticatorParserRuleCall_6_0() { return cAuthenticatorsAuthenticatorParserRuleCall_6_0; }
		
		//("," authenticators+=Authenticator)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//authenticators+=Authenticator
		public Assignment getAuthenticatorsAssignment_7_1() { return cAuthenticatorsAssignment_7_1; }
		
		//Authenticator
		public RuleCall getAuthenticatorsAuthenticatorParserRuleCall_7_1_0() { return cAuthenticatorsAuthenticatorParserRuleCall_7_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
		
		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//'Authentications'
		public Keyword getAuthenticationsKeyword_10() { return cAuthenticationsKeyword_10; }
		
		//":"
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_12() { return cLeftSquareBracketKeyword_12; }
		
		//authMethods+=AuthMethod
		public Assignment getAuthMethodsAssignment_13() { return cAuthMethodsAssignment_13; }
		
		//AuthMethod
		public RuleCall getAuthMethodsAuthMethodParserRuleCall_13_0() { return cAuthMethodsAuthMethodParserRuleCall_13_0; }
		
		//("," authMethods+=AuthMethod)*
		public Group getGroup_14() { return cGroup_14; }
		
		//","
		public Keyword getCommaKeyword_14_0() { return cCommaKeyword_14_0; }
		
		//authMethods+=AuthMethod
		public Assignment getAuthMethodsAssignment_14_1() { return cAuthMethodsAssignment_14_1; }
		
		//AuthMethod
		public RuleCall getAuthMethodsAuthMethodParserRuleCall_14_1_0() { return cAuthMethodsAuthMethodParserRuleCall_14_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_15() { return cRightSquareBracketKeyword_15; }
		
		//","
		public Keyword getCommaKeyword_16() { return cCommaKeyword_16; }
		
		//'Procedures'
		public Keyword getProceduresKeyword_17() { return cProceduresKeyword_17; }
		
		//":"
		public Keyword getColonKeyword_18() { return cColonKeyword_18; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_19() { return cLeftSquareBracketKeyword_19; }
		
		//phases+=Phase
		public Assignment getPhasesAssignment_20() { return cPhasesAssignment_20; }
		
		//Phase
		public RuleCall getPhasesPhaseParserRuleCall_20_0() { return cPhasesPhaseParserRuleCall_20_0; }
		
		//("," phases+=Phase)*
		public Group getGroup_21() { return cGroup_21; }
		
		//","
		public Keyword getCommaKeyword_21_0() { return cCommaKeyword_21_0; }
		
		//phases+=Phase
		public Assignment getPhasesAssignment_21_1() { return cPhasesAssignment_21_1; }
		
		//Phase
		public RuleCall getPhasesPhaseParserRuleCall_21_1_0() { return cPhasesPhaseParserRuleCall_21_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_22() { return cRightSquareBracketKeyword_22; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_23() { return cRightCurlyBracketKeyword_23; }
	}
	public class AuthMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.AuthMethod");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMFAParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSFAParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AuthMethod:
		//	MFA | SFA;
		@Override public ParserRule getRule() { return rule; }
		
		//MFA | SFA
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MFA
		public RuleCall getMFAParserRuleCall_0() { return cMFAParserRuleCall_0; }
		
		//SFA
		public RuleCall getSFAParserRuleCall_1() { return cSFAParserRuleCall_1; }
	}
	public class MFAElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.MFA");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cType2FAKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cAuthenticatorsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAuthenticatorsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cAuthenticatorsAuthenticatorCrossReference_9_0 = (CrossReference)cAuthenticatorsAssignment_9.eContents().get(0);
		private final RuleCall cAuthenticatorsAuthenticatorIDTerminalRuleCall_9_0_1 = (RuleCall)cAuthenticatorsAuthenticatorCrossReference_9_0.eContents().get(1);
		private final Keyword cAmpersandKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cAuthenticatorsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cAuthenticatorsAuthenticatorCrossReference_11_0 = (CrossReference)cAuthenticatorsAssignment_11.eContents().get(0);
		private final RuleCall cAuthenticatorsAuthenticatorIDTerminalRuleCall_11_0_1 = (RuleCall)cAuthenticatorsAuthenticatorCrossReference_11_0.eContents().get(1);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cCorrelationKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cColonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cCorrelationAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cCorrelationEBooleanParserRuleCall_15_0 = (RuleCall)cCorrelationAssignment_15.eContents().get(0);
		private final Keyword cCommaKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cValidationKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cColonKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cValidationAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cValidationValidationTypeEnumRuleCall_19_0 = (RuleCall)cValidationAssignment_19.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//MFA:
		//	type='2FA' ":"
		//	'{'
		//	'name' ":" name=EString ","
		//	'authenticators' ":" authenticators+=[Authenticator] "&" authenticators+=[Authenticator]+ ","?
		//	'correlation' ":" correlation?=EBoolean ","
		//	'validation' ":" validation=ValidationType
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//type='2FA' ":" '{' 'name' ":" name=EString "," 'authenticators' ":" authenticators+=[Authenticator] "&"
		//authenticators+=[Authenticator]+ ","? 'correlation' ":" correlation?=EBoolean "," 'validation' ":"
		//validation=ValidationType '}'
		public Group getGroup() { return cGroup; }
		
		//type='2FA'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'2FA'
		public Keyword getType2FAKeyword_0_0() { return cType2FAKeyword_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'authenticators'
		public Keyword getAuthenticatorsKeyword_7() { return cAuthenticatorsKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//authenticators+=[Authenticator]
		public Assignment getAuthenticatorsAssignment_9() { return cAuthenticatorsAssignment_9; }
		
		//[Authenticator]
		public CrossReference getAuthenticatorsAuthenticatorCrossReference_9_0() { return cAuthenticatorsAuthenticatorCrossReference_9_0; }
		
		//ID
		public RuleCall getAuthenticatorsAuthenticatorIDTerminalRuleCall_9_0_1() { return cAuthenticatorsAuthenticatorIDTerminalRuleCall_9_0_1; }
		
		//"&"
		public Keyword getAmpersandKeyword_10() { return cAmpersandKeyword_10; }
		
		//authenticators+=[Authenticator]+
		public Assignment getAuthenticatorsAssignment_11() { return cAuthenticatorsAssignment_11; }
		
		//[Authenticator]
		public CrossReference getAuthenticatorsAuthenticatorCrossReference_11_0() { return cAuthenticatorsAuthenticatorCrossReference_11_0; }
		
		//ID
		public RuleCall getAuthenticatorsAuthenticatorIDTerminalRuleCall_11_0_1() { return cAuthenticatorsAuthenticatorIDTerminalRuleCall_11_0_1; }
		
		//","?
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//'correlation'
		public Keyword getCorrelationKeyword_13() { return cCorrelationKeyword_13; }
		
		//":"
		public Keyword getColonKeyword_14() { return cColonKeyword_14; }
		
		//correlation?=EBoolean
		public Assignment getCorrelationAssignment_15() { return cCorrelationAssignment_15; }
		
		//EBoolean
		public RuleCall getCorrelationEBooleanParserRuleCall_15_0() { return cCorrelationEBooleanParserRuleCall_15_0; }
		
		//","
		public Keyword getCommaKeyword_16() { return cCommaKeyword_16; }
		
		//'validation'
		public Keyword getValidationKeyword_17() { return cValidationKeyword_17; }
		
		//":"
		public Keyword getColonKeyword_18() { return cColonKeyword_18; }
		
		//validation=ValidationType
		public Assignment getValidationAssignment_19() { return cValidationAssignment_19; }
		
		//ValidationType
		public RuleCall getValidationValidationTypeEnumRuleCall_19_0() { return cValidationValidationTypeEnumRuleCall_19_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class SFAElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.SFA");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeSFAKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cAuthenticatorKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAuthenticatorsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cAuthenticatorsAuthenticatorCrossReference_9_0 = (CrossReference)cAuthenticatorsAssignment_9.eContents().get(0);
		private final RuleCall cAuthenticatorsAuthenticatorIDTerminalRuleCall_9_0_1 = (RuleCall)cAuthenticatorsAuthenticatorCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//SFA:
		//	type='SFA' ":"
		//	'{'
		//	'name' ":" name=EString ","
		//	'authenticator' ":" authenticators+=[Authenticator]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//type='SFA' ":" '{' 'name' ":" name=EString "," 'authenticator' ":" authenticators+=[Authenticator] '}'
		public Group getGroup() { return cGroup; }
		
		//type='SFA'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'SFA'
		public Keyword getTypeSFAKeyword_0_0() { return cTypeSFAKeyword_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'authenticator'
		public Keyword getAuthenticatorKeyword_7() { return cAuthenticatorKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//authenticators+=[Authenticator]
		public Assignment getAuthenticatorsAssignment_9() { return cAuthenticatorsAssignment_9; }
		
		//[Authenticator]
		public CrossReference getAuthenticatorsAuthenticatorCrossReference_9_0() { return cAuthenticatorsAuthenticatorCrossReference_9_0; }
		
		//ID
		public RuleCall getAuthenticatorsAuthenticatorIDTerminalRuleCall_9_0_1() { return cAuthenticatorsAuthenticatorIDTerminalRuleCall_9_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class AuthenticatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Authenticator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPossessionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBiometricsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cKnowledgeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Authenticator:
		//	Possession | Biometrics | Knowledge;
		@Override public ParserRule getRule() { return rule; }
		
		//Possession | Biometrics | Knowledge
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Possession
		public RuleCall getPossessionParserRuleCall_0() { return cPossessionParserRuleCall_0; }
		
		//Biometrics
		public RuleCall getBiometricsParserRuleCall_1() { return cBiometricsParserRuleCall_1; }
		
		//Knowledge
		public RuleCall getKnowledgeParserRuleCall_2() { return cKnowledgeParserRuleCall_2; }
	}
	public class PossessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Possession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypePossessionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cValueKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValuePVALUEEnumRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Possession:
		//	type='Possession' ':'
		//	"{"
		//	'name' ":" name=EString ","
		//	'value' ":" value=PVALUE
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//type='Possession' ':' "{" 'name' ":" name=EString "," 'value' ":" value=PVALUE "}"
		public Group getGroup() { return cGroup; }
		
		//type='Possession'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'Possession'
		public Keyword getTypePossessionKeyword_0_0() { return cTypePossessionKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'value'
		public Keyword getValueKeyword_7() { return cValueKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//value=PVALUE
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//PVALUE
		public RuleCall getValuePVALUEEnumRuleCall_9_0() { return cValuePVALUEEnumRuleCall_9_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class KnowledgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Knowledge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeKnowledgeKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cValueKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueKVALUEEnumRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cCommaKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLimitedAttemptsKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cLimitedAttemptsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cLimitedAttemptsEBooleanParserRuleCall_13_0 = (RuleCall)cLimitedAttemptsAssignment_13.eContents().get(0);
		private final Keyword cCommaKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cAutofillableKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cColonKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cAutofilledAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cAutofilledEBooleanParserRuleCall_17_0 = (RuleCall)cAutofilledAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//Knowledge:
		//	type='Knowledge' ':' '{'
		//	'name' ":" name=EString ","
		//	'value' ":" value=KVALUE ","
		//	"limitedAttempts" ':' limitedAttempts?=EBoolean ","
		//	'autofillable' ":" autofilled?=EBoolean
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//type='Knowledge' ':' '{' 'name' ":" name=EString "," 'value' ":" value=KVALUE "," "limitedAttempts" ':'
		//limitedAttempts?=EBoolean "," 'autofillable' ":" autofilled?=EBoolean '}'
		public Group getGroup() { return cGroup; }
		
		//type='Knowledge'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'Knowledge'
		public Keyword getTypeKnowledgeKeyword_0_0() { return cTypeKnowledgeKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'value'
		public Keyword getValueKeyword_7() { return cValueKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//value=KVALUE
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//KVALUE
		public RuleCall getValueKVALUEEnumRuleCall_9_0() { return cValueKVALUEEnumRuleCall_9_0; }
		
		//","
		public Keyword getCommaKeyword_10() { return cCommaKeyword_10; }
		
		//"limitedAttempts"
		public Keyword getLimitedAttemptsKeyword_11() { return cLimitedAttemptsKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//limitedAttempts?=EBoolean
		public Assignment getLimitedAttemptsAssignment_13() { return cLimitedAttemptsAssignment_13; }
		
		//EBoolean
		public RuleCall getLimitedAttemptsEBooleanParserRuleCall_13_0() { return cLimitedAttemptsEBooleanParserRuleCall_13_0; }
		
		//","
		public Keyword getCommaKeyword_14() { return cCommaKeyword_14; }
		
		//'autofillable'
		public Keyword getAutofillableKeyword_15() { return cAutofillableKeyword_15; }
		
		//":"
		public Keyword getColonKeyword_16() { return cColonKeyword_16; }
		
		//autofilled?=EBoolean
		public Assignment getAutofilledAssignment_17() { return cAutofilledAssignment_17; }
		
		//EBoolean
		public RuleCall getAutofilledEBooleanParserRuleCall_17_0() { return cAutofilledEBooleanParserRuleCall_17_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class BiometricsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Biometrics");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeBiometricsKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cValueKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueBVALUEEnumRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Biometrics:
		//	type='Biometrics' ':'
		//	"{"
		//	'name' ":" name=EString ","
		//	'value' ":" value=BVALUE
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//type='Biometrics' ':' "{" 'name' ":" name=EString "," 'value' ":" value=BVALUE "}"
		public Group getGroup() { return cGroup; }
		
		//type='Biometrics'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'Biometrics'
		public Keyword getTypeBiometricsKeyword_0_0() { return cTypeBiometricsKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'value'
		public Keyword getValueKeyword_7() { return cValueKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//value=BVALUE
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//BVALUE
		public RuleCall getValueBVALUEEnumRuleCall_9_0() { return cValueBVALUEEnumRuleCall_9_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class PhaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Phase");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegistrationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRecoveryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLoginParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cResetParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Phase:
		//	Registration | Recovery | Login | Reset;
		@Override public ParserRule getRule() { return rule; }
		
		//Registration | Recovery | Login | Reset
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Registration
		public RuleCall getRegistrationParserRuleCall_0() { return cRegistrationParserRuleCall_0; }
		
		//Recovery
		public RuleCall getRecoveryParserRuleCall_1() { return cRecoveryParserRuleCall_1; }
		
		//Login
		public RuleCall getLoginParserRuleCall_2() { return cLoginParserRuleCall_2; }
		
		//Reset
		public RuleCall getResetParserRuleCall_3() { return cResetParserRuleCall_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class RegistrationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Registration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeRegistrationKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameEStringParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cCredentialsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCredentialsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCredentialsCredentialParserRuleCall_10_0 = (RuleCall)cCredentialsAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cCredentialsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cCredentialsCredentialParserRuleCall_11_1_0 = (RuleCall)cCredentialsAssignment_11_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Registration:
		//	type='Registration' ":"
		//	'{'
		//	'name' ":" name=EString ","
		//	'credentials' ":" '[' credentials+=Credential ("," credentials+=Credential)* ']'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//type='Registration' ":" '{' 'name' ":" name=EString "," 'credentials' ":" '[' credentials+=Credential (","
		//credentials+=Credential)* ']' '}'
		public Group getGroup() { return cGroup; }
		
		//type='Registration'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'Registration'
		public Keyword getTypeRegistrationKeyword_0_0() { return cTypeRegistrationKeyword_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=EString
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_5_0() { return cNameEStringParserRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'credentials'
		public Keyword getCredentialsKeyword_7() { return cCredentialsKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9() { return cLeftSquareBracketKeyword_9; }
		
		//credentials+=Credential
		public Assignment getCredentialsAssignment_10() { return cCredentialsAssignment_10; }
		
		//Credential
		public RuleCall getCredentialsCredentialParserRuleCall_10_0() { return cCredentialsCredentialParserRuleCall_10_0; }
		
		//("," credentials+=Credential)*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//credentials+=Credential
		public Assignment getCredentialsAssignment_11_1() { return cCredentialsAssignment_11_1; }
		
		//Credential
		public RuleCall getCredentialsCredentialParserRuleCall_11_1_0() { return cCredentialsCredentialParserRuleCall_11_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_12() { return cRightSquareBracketKeyword_12; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class CredentialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Credential");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCredentialAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cProviderKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cProviderAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cProviderPROVIDEREnumRuleCall_8_0 = (RuleCall)cProviderAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cTypeKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cTypeAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cTypeCredTYPEEnumRuleCall_12_0 = (RuleCall)cTypeAssignment_12.eContents().get(0);
		private final Keyword cCommaKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cVerificationKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cColonKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cVerifmethodAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cVerifmethodVerifMethodParserRuleCall_14_2_0 = (RuleCall)cVerifmethodAssignment_14_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//Credential:
		//	{Credential}
		//	'{'
		//	'name' ":" name=EString ","
		//	'provider' ":" provider=PROVIDER ","
		//	'type' ":" type=CredTYPE "," ('verification' ":" verifmethod=VerifMethod)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Credential} '{' 'name' ":" name=EString "," 'provider' ":" provider=PROVIDER "," 'type' ":" type=CredTYPE ","
		//('verification' ":" verifmethod=VerifMethod)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Credential}
		public Action getCredentialAction_0() { return cCredentialAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'provider'
		public Keyword getProviderKeyword_6() { return cProviderKeyword_6; }
		
		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//provider=PROVIDER
		public Assignment getProviderAssignment_8() { return cProviderAssignment_8; }
		
		//PROVIDER
		public RuleCall getProviderPROVIDEREnumRuleCall_8_0() { return cProviderPROVIDEREnumRuleCall_8_0; }
		
		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//'type'
		public Keyword getTypeKeyword_10() { return cTypeKeyword_10; }
		
		//":"
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//type=CredTYPE
		public Assignment getTypeAssignment_12() { return cTypeAssignment_12; }
		
		//CredTYPE
		public RuleCall getTypeCredTYPEEnumRuleCall_12_0() { return cTypeCredTYPEEnumRuleCall_12_0; }
		
		//","
		public Keyword getCommaKeyword_13() { return cCommaKeyword_13; }
		
		//('verification' ":" verifmethod=VerifMethod)?
		public Group getGroup_14() { return cGroup_14; }
		
		//'verification'
		public Keyword getVerificationKeyword_14_0() { return cVerificationKeyword_14_0; }
		
		//":"
		public Keyword getColonKeyword_14_1() { return cColonKeyword_14_1; }
		
		//verifmethod=VerifMethod
		public Assignment getVerifmethodAssignment_14_2() { return cVerifmethodAssignment_14_2; }
		
		//VerifMethod
		public RuleCall getVerifmethodVerifMethodParserRuleCall_14_2_0() { return cVerifmethodVerifMethodParserRuleCall_14_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class VerifMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.VerifMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVerifMethodAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cValidityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValidityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValidityEBooleanParserRuleCall_4_0 = (RuleCall)cValidityAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cUniquenessKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cUniquenessAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cUniquenessEBooleanParserRuleCall_8_0 = (RuleCall)cUniquenessAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cBindingsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cBindingsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cBindingsEBooleanParserRuleCall_12_0 = (RuleCall)cBindingsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//VerifMethod:
		//	{VerifMethod}
		//	'{'
		//	'validity' ":" validity=EBoolean ","
		//	'uniqueness' ":" uniqueness=EBoolean ","
		//	'bindings' ":" bindings=EBoolean
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{VerifMethod} '{' 'validity' ":" validity=EBoolean "," 'uniqueness' ":" uniqueness=EBoolean "," 'bindings' ":"
		//bindings=EBoolean '}'
		public Group getGroup() { return cGroup; }
		
		//{VerifMethod}
		public Action getVerifMethodAction_0() { return cVerifMethodAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'validity'
		public Keyword getValidityKeyword_2() { return cValidityKeyword_2; }
		
		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//validity=EBoolean
		public Assignment getValidityAssignment_4() { return cValidityAssignment_4; }
		
		//EBoolean
		public RuleCall getValidityEBooleanParserRuleCall_4_0() { return cValidityEBooleanParserRuleCall_4_0; }
		
		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'uniqueness'
		public Keyword getUniquenessKeyword_6() { return cUniquenessKeyword_6; }
		
		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//uniqueness=EBoolean
		public Assignment getUniquenessAssignment_8() { return cUniquenessAssignment_8; }
		
		//EBoolean
		public RuleCall getUniquenessEBooleanParserRuleCall_8_0() { return cUniquenessEBooleanParserRuleCall_8_0; }
		
		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//'bindings'
		public Keyword getBindingsKeyword_10() { return cBindingsKeyword_10; }
		
		//":"
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//bindings=EBoolean
		public Assignment getBindingsAssignment_12() { return cBindingsAssignment_12; }
		
		//EBoolean
		public RuleCall getBindingsEBooleanParserRuleCall_12_0() { return cBindingsEBooleanParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class RecoveryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Recovery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRecoveryAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeRecoveryKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNameEStringParserRuleCall_6_0 = (RuleCall)cNameAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAuthenticatorKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cColonKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cAuthenticatorAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cAuthenticatorAuthenticatorCrossReference_8_2_0 = (CrossReference)cAuthenticatorAssignment_8_2.eContents().get(0);
		private final RuleCall cAuthenticatorAuthenticatorIDTerminalRuleCall_8_2_0_1 = (RuleCall)cAuthenticatorAuthenticatorCrossReference_8_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cProtocolKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cColonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cProtocolAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cProtocolProtocolEnumRuleCall_9_2_0 = (RuleCall)cProtocolAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Recovery:
		//	{Recovery} type='Recovery' ":"
		//	'{'
		//	'name' ":" name=EString "," ('authenticator' ":" authenticator=[Authenticator] ",")? ('protocol' ":"
		//	protocol=Protocol)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Recovery} type='Recovery' ":" '{' 'name' ":" name=EString "," ('authenticator' ":" authenticator=[Authenticator] ",")?
		//('protocol' ":" protocol=Protocol)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Recovery}
		public Action getRecoveryAction_0() { return cRecoveryAction_0; }
		
		//type='Recovery'
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//'Recovery'
		public Keyword getTypeRecoveryKeyword_1_0() { return cTypeRecoveryKeyword_1_0; }
		
		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'name'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//name=EString
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_6_0() { return cNameEStringParserRuleCall_6_0; }
		
		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }
		
		//('authenticator' ":" authenticator=[Authenticator] ",")?
		public Group getGroup_8() { return cGroup_8; }
		
		//'authenticator'
		public Keyword getAuthenticatorKeyword_8_0() { return cAuthenticatorKeyword_8_0; }
		
		//":"
		public Keyword getColonKeyword_8_1() { return cColonKeyword_8_1; }
		
		//authenticator=[Authenticator]
		public Assignment getAuthenticatorAssignment_8_2() { return cAuthenticatorAssignment_8_2; }
		
		//[Authenticator]
		public CrossReference getAuthenticatorAuthenticatorCrossReference_8_2_0() { return cAuthenticatorAuthenticatorCrossReference_8_2_0; }
		
		//ID
		public RuleCall getAuthenticatorAuthenticatorIDTerminalRuleCall_8_2_0_1() { return cAuthenticatorAuthenticatorIDTerminalRuleCall_8_2_0_1; }
		
		//","
		public Keyword getCommaKeyword_8_3() { return cCommaKeyword_8_3; }
		
		//('protocol' ":" protocol=Protocol)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'protocol'
		public Keyword getProtocolKeyword_9_0() { return cProtocolKeyword_9_0; }
		
		//":"
		public Keyword getColonKeyword_9_1() { return cColonKeyword_9_1; }
		
		//protocol=Protocol
		public Assignment getProtocolAssignment_9_2() { return cProtocolAssignment_9_2; }
		
		//Protocol
		public RuleCall getProtocolProtocolEnumRuleCall_9_2_0() { return cProtocolProtocolEnumRuleCall_9_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class LoginElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Login");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoginAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeLoginKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNameEStringParserRuleCall_6_0 = (RuleCall)cNameAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cPersistedSessionKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSessionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSessionEBooleanParserRuleCall_10_0 = (RuleCall)cSessionAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cAuthenticationKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cColonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cAuthMethodsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final CrossReference cAuthMethodsAuthMethodCrossReference_14_0 = (CrossReference)cAuthMethodsAssignment_14.eContents().get(0);
		private final RuleCall cAuthMethodsAuthMethodIDTerminalRuleCall_14_0_1 = (RuleCall)cAuthMethodsAuthMethodCrossReference_14_0.eContents().get(1);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cVerticalLineVerticalLineKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cAuthMethodsAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final CrossReference cAuthMethodsAuthMethodCrossReference_15_1_0 = (CrossReference)cAuthMethodsAssignment_15_1.eContents().get(0);
		private final RuleCall cAuthMethodsAuthMethodIDTerminalRuleCall_15_1_0_1 = (RuleCall)cAuthMethodsAuthMethodCrossReference_15_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Login:
		//	{Login} type='Login' ":"
		//	'{'
		//	'name' ":" name=EString ","
		//	'persistedSession' ":" session=EBoolean ","
		//	'authentication' ":" authMethods+=[AuthMethod] ("||" authMethods+=[AuthMethod])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Login} type='Login' ":" '{' 'name' ":" name=EString "," 'persistedSession' ":" session=EBoolean "," 'authentication'
		//":" authMethods+=[AuthMethod] ("||" authMethods+=[AuthMethod])* '}'
		public Group getGroup() { return cGroup; }
		
		//{Login}
		public Action getLoginAction_0() { return cLoginAction_0; }
		
		//type='Login'
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//'Login'
		public Keyword getTypeLoginKeyword_1_0() { return cTypeLoginKeyword_1_0; }
		
		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'name'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//name=EString
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_6_0() { return cNameEStringParserRuleCall_6_0; }
		
		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }
		
		//'persistedSession'
		public Keyword getPersistedSessionKeyword_8() { return cPersistedSessionKeyword_8; }
		
		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//session=EBoolean
		public Assignment getSessionAssignment_10() { return cSessionAssignment_10; }
		
		//EBoolean
		public RuleCall getSessionEBooleanParserRuleCall_10_0() { return cSessionEBooleanParserRuleCall_10_0; }
		
		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }
		
		//'authentication'
		public Keyword getAuthenticationKeyword_12() { return cAuthenticationKeyword_12; }
		
		//":"
		public Keyword getColonKeyword_13() { return cColonKeyword_13; }
		
		//authMethods+=[AuthMethod]
		public Assignment getAuthMethodsAssignment_14() { return cAuthMethodsAssignment_14; }
		
		//[AuthMethod]
		public CrossReference getAuthMethodsAuthMethodCrossReference_14_0() { return cAuthMethodsAuthMethodCrossReference_14_0; }
		
		//ID
		public RuleCall getAuthMethodsAuthMethodIDTerminalRuleCall_14_0_1() { return cAuthMethodsAuthMethodIDTerminalRuleCall_14_0_1; }
		
		//("||" authMethods+=[AuthMethod])*
		public Group getGroup_15() { return cGroup_15; }
		
		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_15_0() { return cVerticalLineVerticalLineKeyword_15_0; }
		
		//authMethods+=[AuthMethod]
		public Assignment getAuthMethodsAssignment_15_1() { return cAuthMethodsAssignment_15_1; }
		
		//[AuthMethod]
		public CrossReference getAuthMethodsAuthMethodCrossReference_15_1_0() { return cAuthMethodsAuthMethodCrossReference_15_1_0; }
		
		//ID
		public RuleCall getAuthMethodsAuthMethodIDTerminalRuleCall_15_1_0_1() { return cAuthMethodsAuthMethodIDTerminalRuleCall_15_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}
	public class ResetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Reset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResetAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeResetKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNameEStringParserRuleCall_6_0 = (RuleCall)cNameAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAuthenticatorKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cColonKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cAuthenticatorAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cAuthenticatorAuthenticatorCrossReference_8_2_0 = (CrossReference)cAuthenticatorAssignment_8_2.eContents().get(0);
		private final RuleCall cAuthenticatorAuthenticatorIDTerminalRuleCall_8_2_0_1 = (RuleCall)cAuthenticatorAuthenticatorCrossReference_8_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Keyword cAuthenticationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cAuthMethodsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cAuthMethodsAuthMethodCrossReference_11_0 = (CrossReference)cAuthMethodsAssignment_11.eContents().get(0);
		private final RuleCall cAuthMethodsAuthMethodIDTerminalRuleCall_11_0_1 = (RuleCall)cAuthMethodsAuthMethodCrossReference_11_0.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cVerticalLineVerticalLineKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cAuthMethodsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final CrossReference cAuthMethodsAuthMethodCrossReference_12_1_0 = (CrossReference)cAuthMethodsAssignment_12_1.eContents().get(0);
		private final RuleCall cAuthMethodsAuthMethodIDTerminalRuleCall_12_1_0_1 = (RuleCall)cAuthMethodsAuthMethodCrossReference_12_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Reset:
		//	{Reset} type='Reset' ":"
		//	'{'
		//	'name' ":" name=EString "," ('authenticator' ":" authenticator=[Authenticator] ",")?
		//	'authentication' ":" authMethods+=[AuthMethod] ("||" authMethods+=[AuthMethod])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Reset} type='Reset' ":" '{' 'name' ":" name=EString "," ('authenticator' ":" authenticator=[Authenticator] ",")?
		//'authentication' ":" authMethods+=[AuthMethod] ("||" authMethods+=[AuthMethod])* '}'
		public Group getGroup() { return cGroup; }
		
		//{Reset}
		public Action getResetAction_0() { return cResetAction_0; }
		
		//type='Reset'
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//'Reset'
		public Keyword getTypeResetKeyword_1_0() { return cTypeResetKeyword_1_0; }
		
		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'name'
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }
		
		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//name=EString
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_6_0() { return cNameEStringParserRuleCall_6_0; }
		
		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }
		
		//('authenticator' ":" authenticator=[Authenticator] ",")?
		public Group getGroup_8() { return cGroup_8; }
		
		//'authenticator'
		public Keyword getAuthenticatorKeyword_8_0() { return cAuthenticatorKeyword_8_0; }
		
		//":"
		public Keyword getColonKeyword_8_1() { return cColonKeyword_8_1; }
		
		//authenticator=[Authenticator]
		public Assignment getAuthenticatorAssignment_8_2() { return cAuthenticatorAssignment_8_2; }
		
		//[Authenticator]
		public CrossReference getAuthenticatorAuthenticatorCrossReference_8_2_0() { return cAuthenticatorAuthenticatorCrossReference_8_2_0; }
		
		//ID
		public RuleCall getAuthenticatorAuthenticatorIDTerminalRuleCall_8_2_0_1() { return cAuthenticatorAuthenticatorIDTerminalRuleCall_8_2_0_1; }
		
		//","
		public Keyword getCommaKeyword_8_3() { return cCommaKeyword_8_3; }
		
		//'authentication'
		public Keyword getAuthenticationKeyword_9() { return cAuthenticationKeyword_9; }
		
		//":"
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//authMethods+=[AuthMethod]
		public Assignment getAuthMethodsAssignment_11() { return cAuthMethodsAssignment_11; }
		
		//[AuthMethod]
		public CrossReference getAuthMethodsAuthMethodCrossReference_11_0() { return cAuthMethodsAuthMethodCrossReference_11_0; }
		
		//ID
		public RuleCall getAuthMethodsAuthMethodIDTerminalRuleCall_11_0_1() { return cAuthMethodsAuthMethodIDTerminalRuleCall_11_0_1; }
		
		//("||" authMethods+=[AuthMethod])*
		public Group getGroup_12() { return cGroup_12; }
		
		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_12_0() { return cVerticalLineVerticalLineKeyword_12_0; }
		
		//authMethods+=[AuthMethod]
		public Assignment getAuthMethodsAssignment_12_1() { return cAuthMethodsAssignment_12_1; }
		
		//[AuthMethod]
		public CrossReference getAuthMethodsAuthMethodCrossReference_12_1_0() { return cAuthMethodsAuthMethodCrossReference_12_1_0; }
		
		//ID
		public RuleCall getAuthMethodsAuthMethodIDTerminalRuleCall_12_1_0_1() { return cAuthMethodsAuthMethodIDTerminalRuleCall_12_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class LEVELElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.LEVEL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLOWEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLOWLOWKeyword_0_0 = (Keyword)cLOWEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMEDIUMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMEDIUMMEDIUMKeyword_1_0 = (Keyword)cMEDIUMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cHIGHEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cHIGHHIGHKeyword_2_0 = (Keyword)cHIGHEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum LEVEL:
		//	LOW | MEDIUM | HIGH;
		public EnumRule getRule() { return rule; }
		
		//LOW | MEDIUM | HIGH
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LOW
		public EnumLiteralDeclaration getLOWEnumLiteralDeclaration_0() { return cLOWEnumLiteralDeclaration_0; }
		
		//'LOW'
		public Keyword getLOWLOWKeyword_0_0() { return cLOWLOWKeyword_0_0; }
		
		//MEDIUM
		public EnumLiteralDeclaration getMEDIUMEnumLiteralDeclaration_1() { return cMEDIUMEnumLiteralDeclaration_1; }
		
		//'MEDIUM'
		public Keyword getMEDIUMMEDIUMKeyword_1_0() { return cMEDIUMMEDIUMKeyword_1_0; }
		
		//HIGH
		public EnumLiteralDeclaration getHIGHEnumLiteralDeclaration_2() { return cHIGHEnumLiteralDeclaration_2; }
		
		//'HIGH'
		public Keyword getHIGHHIGHKeyword_2_0() { return cHIGHHIGHKeyword_2_0; }
	}
	public class PROVIDERElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.PROVIDER");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIdPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIdPIdentityProviderKeyword_0_0 = (Keyword)cIdPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSELFEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSELFSelfProvidedKeyword_1_0 = (Keyword)cSELFEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINSTITUTIONALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINSTITUTIONALInstitutionalKeyword_2_0 = (Keyword)cINSTITUTIONALEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PROVIDER:
		//	IdP="Identity provider" | SELF="Self provided" | INSTITUTIONAL="Institutional";
		public EnumRule getRule() { return rule; }
		
		//IdP="Identity provider" | SELF="Self provided" | INSTITUTIONAL="Institutional"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IdP="Identity provider"
		public EnumLiteralDeclaration getIdPEnumLiteralDeclaration_0() { return cIdPEnumLiteralDeclaration_0; }
		
		//"Identity provider"
		public Keyword getIdPIdentityProviderKeyword_0_0() { return cIdPIdentityProviderKeyword_0_0; }
		
		//SELF="Self provided"
		public EnumLiteralDeclaration getSELFEnumLiteralDeclaration_1() { return cSELFEnumLiteralDeclaration_1; }
		
		//"Self provided"
		public Keyword getSELFSelfProvidedKeyword_1_0() { return cSELFSelfProvidedKeyword_1_0; }
		
		//INSTITUTIONAL="Institutional"
		public EnumLiteralDeclaration getINSTITUTIONALEnumLiteralDeclaration_2() { return cINSTITUTIONALEnumLiteralDeclaration_2; }
		
		//"Institutional"
		public Keyword getINSTITUTIONALInstitutionalKeyword_2_0() { return cINSTITUTIONALInstitutionalKeyword_2_0; }
	}
	public class CredTYPEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.CredTYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDIGITALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDIGITALDigitalKeyword_0_0 = (Keyword)cDIGITALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPHYSICALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPHYSICALPhysicalKeyword_1_0 = (Keyword)cPHYSICALEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CredTYPE:
		//	DIGITAL='Digital' | PHYSICAL='Physical';
		public EnumRule getRule() { return rule; }
		
		//DIGITAL='Digital' | PHYSICAL='Physical'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DIGITAL='Digital'
		public EnumLiteralDeclaration getDIGITALEnumLiteralDeclaration_0() { return cDIGITALEnumLiteralDeclaration_0; }
		
		//'Digital'
		public Keyword getDIGITALDigitalKeyword_0_0() { return cDIGITALDigitalKeyword_0_0; }
		
		//PHYSICAL='Physical'
		public EnumLiteralDeclaration getPHYSICALEnumLiteralDeclaration_1() { return cPHYSICALEnumLiteralDeclaration_1; }
		
		//'Physical'
		public Keyword getPHYSICALPhysicalKeyword_1_0() { return cPHYSICALPhysicalKeyword_1_0; }
	}
	public class ProtocolElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.Protocol");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEBIAEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEBIAEmailBasedKeyword_0_0 = (Keyword)cEBIAEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSMS_BASEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSMS_BASEDMSBasedKeyword_1_0 = (Keyword)cSMS_BASEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLOCALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLOCALLocalKeyword_2_0 = (Keyword)cLOCALEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Protocol:
		//	EBIA='Email-Based' | SMS_BASED="MS-based" | LOCAL="Local";
		public EnumRule getRule() { return rule; }
		
		//EBIA='Email-Based' | SMS_BASED="MS-based" | LOCAL="Local"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EBIA='Email-Based'
		public EnumLiteralDeclaration getEBIAEnumLiteralDeclaration_0() { return cEBIAEnumLiteralDeclaration_0; }
		
		//'Email-Based'
		public Keyword getEBIAEmailBasedKeyword_0_0() { return cEBIAEmailBasedKeyword_0_0; }
		
		//SMS_BASED="MS-based"
		public EnumLiteralDeclaration getSMS_BASEDEnumLiteralDeclaration_1() { return cSMS_BASEDEnumLiteralDeclaration_1; }
		
		//"MS-based"
		public Keyword getSMS_BASEDMSBasedKeyword_1_0() { return cSMS_BASEDMSBasedKeyword_1_0; }
		
		//LOCAL="Local"
		public EnumLiteralDeclaration getLOCALEnumLiteralDeclaration_2() { return cLOCALEnumLiteralDeclaration_2; }
		
		//"Local"
		public Keyword getLOCALLocalKeyword_2_0() { return cLOCALLocalKeyword_2_0; }
	}
	public class KVALUEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.KVALUE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTBPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTBPHighEntropyTextBasedPasswordKeyword_0_0 = (Keyword)cSTBPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPASSPHRASEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPASSPHRASEPassPhraseKeyword_1_0 = (Keyword)cPASSPHRASEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPREFERENCESEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPREFERENCESKnowledgeBasedPreferencesKeyword_2_0 = (Keyword)cPREFERENCESEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLTBPEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLTBPLowEntropyTextBasedPasswordKeyword_3_0 = (Keyword)cLTBPEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPINEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPINPinCodeKeyword_4_0 = (Keyword)cPINEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum KVALUE:
		//	STBP="High Entropy Text-Based Password" |
		//	PASSPHRASE="Pass phrase" |
		//	PREFERENCES="Knowledge-based Preferences" |
		//	LTBP="Low Entropy Text-Based Password" |
		//	PIN="Pin Code";
		public EnumRule getRule() { return rule; }
		
		//STBP="High Entropy Text-Based Password" | PASSPHRASE="Pass phrase" | PREFERENCES="Knowledge-based Preferences" |
		//LTBP="Low Entropy Text-Based Password" | PIN="Pin Code"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STBP="High Entropy Text-Based Password"
		public EnumLiteralDeclaration getSTBPEnumLiteralDeclaration_0() { return cSTBPEnumLiteralDeclaration_0; }
		
		//"High Entropy Text-Based Password"
		public Keyword getSTBPHighEntropyTextBasedPasswordKeyword_0_0() { return cSTBPHighEntropyTextBasedPasswordKeyword_0_0; }
		
		//PASSPHRASE="Pass phrase"
		public EnumLiteralDeclaration getPASSPHRASEEnumLiteralDeclaration_1() { return cPASSPHRASEEnumLiteralDeclaration_1; }
		
		//"Pass phrase"
		public Keyword getPASSPHRASEPassPhraseKeyword_1_0() { return cPASSPHRASEPassPhraseKeyword_1_0; }
		
		//PREFERENCES="Knowledge-based Preferences"
		public EnumLiteralDeclaration getPREFERENCESEnumLiteralDeclaration_2() { return cPREFERENCESEnumLiteralDeclaration_2; }
		
		//"Knowledge-based Preferences"
		public Keyword getPREFERENCESKnowledgeBasedPreferencesKeyword_2_0() { return cPREFERENCESKnowledgeBasedPreferencesKeyword_2_0; }
		
		//LTBP="Low Entropy Text-Based Password"
		public EnumLiteralDeclaration getLTBPEnumLiteralDeclaration_3() { return cLTBPEnumLiteralDeclaration_3; }
		
		//"Low Entropy Text-Based Password"
		public Keyword getLTBPLowEntropyTextBasedPasswordKeyword_3_0() { return cLTBPLowEntropyTextBasedPasswordKeyword_3_0; }
		
		//PIN="Pin Code"
		public EnumLiteralDeclaration getPINEnumLiteralDeclaration_4() { return cPINEnumLiteralDeclaration_4; }
		
		//"Pin Code"
		public Keyword getPINPinCodeKeyword_4_0() { return cPINPinCodeKeyword_4_0; }
	}
	public class BVALUEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.BVALUE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFINGERPRINTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFINGERPRINTFingerprintRecognitionKeyword_0_0 = (Keyword)cFINGERPRINTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIRISEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIRISFacialRecognitionKeyword_1_0 = (Keyword)cIRISEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BVALUE:
		//	FINGERPRINT="Fingerprint Recognition" |
		//	IRIS="Facial Recognition";
		public EnumRule getRule() { return rule; }
		
		//FINGERPRINT="Fingerprint Recognition" | IRIS="Facial Recognition"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FINGERPRINT="Fingerprint Recognition"
		public EnumLiteralDeclaration getFINGERPRINTEnumLiteralDeclaration_0() { return cFINGERPRINTEnumLiteralDeclaration_0; }
		
		//"Fingerprint Recognition"
		public Keyword getFINGERPRINTFingerprintRecognitionKeyword_0_0() { return cFINGERPRINTFingerprintRecognitionKeyword_0_0; }
		
		//IRIS="Facial Recognition"
		public EnumLiteralDeclaration getIRISEnumLiteralDeclaration_1() { return cIRISEnumLiteralDeclaration_1; }
		
		//"Facial Recognition"
		public Keyword getIRISFacialRecognitionKeyword_1_0() { return cIRISFacialRecognitionKeyword_1_0; }
	}
	public class PVALUEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.PVALUE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTOKENEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTOKENHardDriveTokenKeyword_0_0 = (Keyword)cTOKENEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDEVICEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDEVICEPhysicalDeviceKeyword_1_0 = (Keyword)cDEVICEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PVALUE:
		//	TOKEN="Hard Drive Token" |
		//	DEVICE="Physical device";
		public EnumRule getRule() { return rule; }
		
		//TOKEN="Hard Drive Token" | DEVICE="Physical device"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TOKEN="Hard Drive Token"
		public EnumLiteralDeclaration getTOKENEnumLiteralDeclaration_0() { return cTOKENEnumLiteralDeclaration_0; }
		
		//"Hard Drive Token"
		public Keyword getTOKENHardDriveTokenKeyword_0_0() { return cTOKENHardDriveTokenKeyword_0_0; }
		
		//DEVICE="Physical device"
		public EnumLiteralDeclaration getDEVICEEnumLiteralDeclaration_1() { return cDEVICEEnumLiteralDeclaration_1; }
		
		//"Physical device"
		public Keyword getDEVICEPhysicalDeviceKeyword_1_0() { return cDEVICEPhysicalDeviceKeyword_1_0; }
	}
	public class ValidationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.Lightweight.ValidationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLOCALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLOCALLocalValidationKeyword_0_0 = (Keyword)cLOCALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREMOTEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREMOTERemoteValidationKeyword_1_0 = (Keyword)cREMOTEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ValidationType:
		//	LOCAL="local validation" | REMOTE="Remote validation";
		public EnumRule getRule() { return rule; }
		
		//LOCAL="local validation" | REMOTE="Remote validation"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LOCAL="local validation"
		public EnumLiteralDeclaration getLOCALEnumLiteralDeclaration_0() { return cLOCALEnumLiteralDeclaration_0; }
		
		//"local validation"
		public Keyword getLOCALLocalValidationKeyword_0_0() { return cLOCALLocalValidationKeyword_0_0; }
		
		//REMOTE="Remote validation"
		public EnumLiteralDeclaration getREMOTEEnumLiteralDeclaration_1() { return cREMOTEEnumLiteralDeclaration_1; }
		
		//"Remote validation"
		public Keyword getREMOTERemoteValidationKeyword_1_0() { return cREMOTERemoteValidationKeyword_1_0; }
	}
	
	private final AppElements pApp;
	private final AuthMethodElements pAuthMethod;
	private final MFAElements pMFA;
	private final SFAElements pSFA;
	private final AuthenticatorElements pAuthenticator;
	private final PossessionElements pPossession;
	private final KnowledgeElements pKnowledge;
	private final BiometricsElements pBiometrics;
	private final PhaseElements pPhase;
	private final LEVELElements eLEVEL;
	private final EStringElements pEString;
	private final RegistrationElements pRegistration;
	private final CredentialElements pCredential;
	private final VerifMethodElements pVerifMethod;
	private final RecoveryElements pRecovery;
	private final LoginElements pLogin;
	private final ResetElements pReset;
	private final PROVIDERElements ePROVIDER;
	private final CredTYPEElements eCredTYPE;
	private final EBooleanElements pEBoolean;
	private final ProtocolElements eProtocol;
	private final KVALUEElements eKVALUE;
	private final BVALUEElements eBVALUE;
	private final PVALUEElements ePVALUE;
	private final ValidationTypeElements eValidationType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public LightweightGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pApp = new AppElements();
		this.pAuthMethod = new AuthMethodElements();
		this.pMFA = new MFAElements();
		this.pSFA = new SFAElements();
		this.pAuthenticator = new AuthenticatorElements();
		this.pPossession = new PossessionElements();
		this.pKnowledge = new KnowledgeElements();
		this.pBiometrics = new BiometricsElements();
		this.pPhase = new PhaseElements();
		this.eLEVEL = new LEVELElements();
		this.pEString = new EStringElements();
		this.pRegistration = new RegistrationElements();
		this.pCredential = new CredentialElements();
		this.pVerifMethod = new VerifMethodElements();
		this.pRecovery = new RecoveryElements();
		this.pLogin = new LoginElements();
		this.pReset = new ResetElements();
		this.ePROVIDER = new PROVIDERElements();
		this.eCredTYPE = new CredTYPEElements();
		this.pEBoolean = new EBooleanElements();
		this.eProtocol = new ProtocolElements();
		this.eKVALUE = new KVALUEElements();
		this.eBVALUE = new BVALUEElements();
		this.ePVALUE = new PVALUEElements();
		this.eValidationType = new ValidationTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl1.Lightweight".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//App:
	//	'App' ":"
	//	'{'
	//	'Authenticators' ":" '[' authenticators+=Authenticator ("," authenticators+=Authenticator)* ']' ","
	//	'Authentications' ":" '[' authMethods+=AuthMethod ("," authMethods+=AuthMethod)* ']' ","
	//	'Procedures' ":" '[' phases+=Phase ("," phases+=Phase)* ']'
	//	'}';
	public AppElements getAppAccess() {
		return pApp;
	}
	
	public ParserRule getAppRule() {
		return getAppAccess().getRule();
	}
	
	//AuthMethod:
	//	MFA | SFA;
	public AuthMethodElements getAuthMethodAccess() {
		return pAuthMethod;
	}
	
	public ParserRule getAuthMethodRule() {
		return getAuthMethodAccess().getRule();
	}
	
	//MFA:
	//	type='2FA' ":"
	//	'{'
	//	'name' ":" name=EString ","
	//	'authenticators' ":" authenticators+=[Authenticator] "&" authenticators+=[Authenticator]+ ","?
	//	'correlation' ":" correlation?=EBoolean ","
	//	'validation' ":" validation=ValidationType
	//	'}';
	public MFAElements getMFAAccess() {
		return pMFA;
	}
	
	public ParserRule getMFARule() {
		return getMFAAccess().getRule();
	}
	
	//SFA:
	//	type='SFA' ":"
	//	'{'
	//	'name' ":" name=EString ","
	//	'authenticator' ":" authenticators+=[Authenticator]
	//	'}';
	public SFAElements getSFAAccess() {
		return pSFA;
	}
	
	public ParserRule getSFARule() {
		return getSFAAccess().getRule();
	}
	
	//Authenticator:
	//	Possession | Biometrics | Knowledge;
	public AuthenticatorElements getAuthenticatorAccess() {
		return pAuthenticator;
	}
	
	public ParserRule getAuthenticatorRule() {
		return getAuthenticatorAccess().getRule();
	}
	
	//Possession:
	//	type='Possession' ':'
	//	"{"
	//	'name' ":" name=EString ","
	//	'value' ":" value=PVALUE
	//	"}";
	public PossessionElements getPossessionAccess() {
		return pPossession;
	}
	
	public ParserRule getPossessionRule() {
		return getPossessionAccess().getRule();
	}
	
	//Knowledge:
	//	type='Knowledge' ':' '{'
	//	'name' ":" name=EString ","
	//	'value' ":" value=KVALUE ","
	//	"limitedAttempts" ':' limitedAttempts?=EBoolean ","
	//	'autofillable' ":" autofilled?=EBoolean
	//	'}';
	public KnowledgeElements getKnowledgeAccess() {
		return pKnowledge;
	}
	
	public ParserRule getKnowledgeRule() {
		return getKnowledgeAccess().getRule();
	}
	
	//Biometrics:
	//	type='Biometrics' ':'
	//	"{"
	//	'name' ":" name=EString ","
	//	'value' ":" value=BVALUE
	//	"}";
	public BiometricsElements getBiometricsAccess() {
		return pBiometrics;
	}
	
	public ParserRule getBiometricsRule() {
		return getBiometricsAccess().getRule();
	}
	
	//Phase:
	//	Registration | Recovery | Login | Reset;
	public PhaseElements getPhaseAccess() {
		return pPhase;
	}
	
	public ParserRule getPhaseRule() {
		return getPhaseAccess().getRule();
	}
	
	//enum LEVEL:
	//	LOW | MEDIUM | HIGH;
	public LEVELElements getLEVELAccess() {
		return eLEVEL;
	}
	
	public EnumRule getLEVELRule() {
		return getLEVELAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Registration:
	//	type='Registration' ":"
	//	'{'
	//	'name' ":" name=EString ","
	//	'credentials' ":" '[' credentials+=Credential ("," credentials+=Credential)* ']'
	//	'}';
	public RegistrationElements getRegistrationAccess() {
		return pRegistration;
	}
	
	public ParserRule getRegistrationRule() {
		return getRegistrationAccess().getRule();
	}
	
	//Credential:
	//	{Credential}
	//	'{'
	//	'name' ":" name=EString ","
	//	'provider' ":" provider=PROVIDER ","
	//	'type' ":" type=CredTYPE "," ('verification' ":" verifmethod=VerifMethod)?
	//	'}';
	public CredentialElements getCredentialAccess() {
		return pCredential;
	}
	
	public ParserRule getCredentialRule() {
		return getCredentialAccess().getRule();
	}
	
	//VerifMethod:
	//	{VerifMethod}
	//	'{'
	//	'validity' ":" validity=EBoolean ","
	//	'uniqueness' ":" uniqueness=EBoolean ","
	//	'bindings' ":" bindings=EBoolean
	//	'}';
	public VerifMethodElements getVerifMethodAccess() {
		return pVerifMethod;
	}
	
	public ParserRule getVerifMethodRule() {
		return getVerifMethodAccess().getRule();
	}
	
	//Recovery:
	//	{Recovery} type='Recovery' ":"
	//	'{'
	//	'name' ":" name=EString "," ('authenticator' ":" authenticator=[Authenticator] ",")? ('protocol' ":"
	//	protocol=Protocol)?
	//	'}';
	public RecoveryElements getRecoveryAccess() {
		return pRecovery;
	}
	
	public ParserRule getRecoveryRule() {
		return getRecoveryAccess().getRule();
	}
	
	//Login:
	//	{Login} type='Login' ":"
	//	'{'
	//	'name' ":" name=EString ","
	//	'persistedSession' ":" session=EBoolean ","
	//	'authentication' ":" authMethods+=[AuthMethod] ("||" authMethods+=[AuthMethod])*
	//	'}';
	public LoginElements getLoginAccess() {
		return pLogin;
	}
	
	public ParserRule getLoginRule() {
		return getLoginAccess().getRule();
	}
	
	//Reset:
	//	{Reset} type='Reset' ":"
	//	'{'
	//	'name' ":" name=EString "," ('authenticator' ":" authenticator=[Authenticator] ",")?
	//	'authentication' ":" authMethods+=[AuthMethod] ("||" authMethods+=[AuthMethod])*
	//	'}';
	public ResetElements getResetAccess() {
		return pReset;
	}
	
	public ParserRule getResetRule() {
		return getResetAccess().getRule();
	}
	
	//enum PROVIDER:
	//	IdP="Identity provider" | SELF="Self provided" | INSTITUTIONAL="Institutional";
	public PROVIDERElements getPROVIDERAccess() {
		return ePROVIDER;
	}
	
	public EnumRule getPROVIDERRule() {
		return getPROVIDERAccess().getRule();
	}
	
	//enum CredTYPE:
	//	DIGITAL='Digital' | PHYSICAL='Physical';
	public CredTYPEElements getCredTYPEAccess() {
		return eCredTYPE;
	}
	
	public EnumRule getCredTYPERule() {
		return getCredTYPEAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum Protocol:
	//	EBIA='Email-Based' | SMS_BASED="MS-based" | LOCAL="Local";
	public ProtocolElements getProtocolAccess() {
		return eProtocol;
	}
	
	public EnumRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//enum KVALUE:
	//	STBP="High Entropy Text-Based Password" |
	//	PASSPHRASE="Pass phrase" |
	//	PREFERENCES="Knowledge-based Preferences" |
	//	LTBP="Low Entropy Text-Based Password" |
	//	PIN="Pin Code";
	public KVALUEElements getKVALUEAccess() {
		return eKVALUE;
	}
	
	public EnumRule getKVALUERule() {
		return getKVALUEAccess().getRule();
	}
	
	//enum BVALUE:
	//	FINGERPRINT="Fingerprint Recognition" |
	//	IRIS="Facial Recognition";
	public BVALUEElements getBVALUEAccess() {
		return eBVALUE;
	}
	
	public EnumRule getBVALUERule() {
		return getBVALUEAccess().getRule();
	}
	
	//enum PVALUE:
	//	TOKEN="Hard Drive Token" |
	//	DEVICE="Physical device";
	public PVALUEElements getPVALUEAccess() {
		return ePVALUE;
	}
	
	public EnumRule getPVALUERule() {
		return getPVALUEAccess().getRule();
	}
	
	//enum ValidationType:
	//	LOCAL="local validation" | REMOTE="Remote validation";
	public ValidationTypeElements getValidationTypeAccess() {
		return eValidationType;
	}
	
	public EnumRule getValidationTypeRule() {
		return getValidationTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
